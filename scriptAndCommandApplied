sun@ubuntu:~/mcs041$ cat lastmodify.sh
# Write a shell script that displays the last modification time of any file.
echo -n "Enter a filename to see last modification time : "
read fileName

# make sure file exits
if [ ! -f $fileName ]
then
 echo "$fileName not a file"
 exit 1
fi

# use stat command to display
echo "$fileName was last modified on $(stat -c %x $fileName)"
-------------------------------------------------------------------
displays the last modification time of any file.
stat -c %x lastmodify.sh
------------------------------------------------------------------
To display all the files whose filename starts with "sh"
touch shell1.sh shell2.sh shell3.sh
ls sh*
ls s*
find . -type f -name "s*"
ls | grep sh
ls abc*   # list all files starting with abc---
ls *abc*  # list all files containing --abc--
ls *abc   # list all files ending with --abc
tree -P 'abc*'  # list directory tree of file starting with abc---
tree -l 'def*'  # exclude files starting with def---
$ python -c 'import sys,os;found=[os.path.join(r,i) for r,s,f in os.walk(".")
for i in f if i.startswith("sh")];map(lambda x: sys.stdout.write(x+"\n") ,found)'
$ perl -le 'use File::Find;find(sub{ -f && $_ =~/^ABC/ && print $File::Find::name  },".")' 
-------------------------------------------------------------------------------------------
Write a grep command to select the lines from a file that has exactly
3 characters:
grep -c -E "^.{3}$" shell1.sh
awk '{if(length($0) == 3) print}' shell1.sh
-------------------------------------------------------------------------
Compare the two text files and display the first difference. 
diff lastmodify.sh shell1.sh
diff -q lastmodify.sh shell1.sh
cmp lastmodify.sh shell1.sh
-------------------------------------------------
#Shell program to count the characters, count the lines and the words in a particular file:
echo Enter the filename
read file
w=`cat $file | wc -w`
c=`cat $file | wc -c`
l=`grep -c "." $file`
echo Number of characters in $file is $c
echo Number of words in $file is $w
echo Number of lines in $file is $l
-------------------------------------------------
To remove all the files with filenames starting with "k" or "K" in the current
working directory:
rm -rf a*
find . -type f -name a\* -exec rm {} \;
find . -name "a*" -exec rm {} \;
find . -name "a*" -type f -delete
--------------------------------------------------------------------
To see octal pemission of any files:
stat -c "%a %n" *
-----------------------------------------------------------
To display the inode no. of any file:
ls -i /etc/passwd
ls -il
-----------------------------------------------------------
To copy all the files in PWD to a new folder:
 cp -R mcs041/ mcs
---------------------------------------------------------
To append contents of filet to filel:
cat appendfil.sh >> shell3.sh
--------------------------------------------
To display the status of all the processes:
ps -aux | less/more
--------------------------------------------------------
 A shell program to search for the filenames:
#!/bin/bash
printf "\n Please enter a file name "
read num3
printf "\n Please enter the path to check "
read path2check

if find $path2check -name $num3 -print -quit |
   grep -q '^'; then
  echo "the file exists!"
else
  echo "the file does not exist!"
fi
--------------------------------------------------------
To create another link to the existing file:
ln -s shell3.sh shell7.sh
---------------------------------------------------------
To count the number of files in the current directory:
ls -l | wc -l
--------------------------------------------------------------
To split a file with each file containing 5 lines:
 split -l 5 lastmodify.sh
------------------------------------------------------------------------
To translate characters from upper case to lower case of any text file:
 tr '[:upper:]' '[:lower:]' < a.txt
 tr A-Z a-z < a.txt
------------------------------------------------------------------------- 
#Write a shell program to combine any 2 files into a single file:
echo Enter first filename
read first
echo Enter second filename
read second
cat $first > third
cat $second >> third
echo After concatination of contents of entered two files
echo ----------------------------------------------------
cat third | more
echo ----------------------------------------------------
----------------------------------------------------------------------------
To combine multiple files/directories into single archive:
tar cf archive.tar  third a.txt
----------------------------------------------------------------
Write a shell program to translate all the characters to lower case in any given
text file:
sun@ubuntu:~/mcs041$ cat upper2lower.sh
echo -n "Enter a text file name : "
read file

if [ ! -f $file ]
then
 echo "$file not a file!"
 exit 1
fi

cat $file | tr '[A-Z]' '[a-z]'
------------------------------------------------------------------------------------
Write a shell program, using "grep" to find the number of occurrences of a string
"and" in a text file and display its count:
find . -name "*.txt" -exec cat {} + | grep -ic abc
------------------------------------------------------------------------------------
#Write a shell program to swap the values of the variables "a" and "b":

echo "Enter value for x : "
read x
echo "Enter value for y : "
read y
echo "Before swap, x = $x and y = $y"
z=$x
x=$y
y=$z
echo "After swap, x = $x and y = $y"
---------------------------------------------------------
# Write a shell program to generate Fibonacci series up to "N" terms
clear
  echo "How many number of terms to be generated ?"
  read n
  x=0
  y=1
  i=2
  echo "Fibonacci Series up to $n terms :"
  echo "$x"
  echo "$y"
  while [ $i -lt $n ]
  do
      i=`expr $i + 1 `
      z=`expr $x + $y `
      echo "$z"
      x=$y
      y=$z
  done
--------------------------------------------------------------------------
#Write a shell script in LINUX / UNIX that accepts a text file as input and prints
the number of words in the file that have a vowel in them:
#vowelInFile.sh
#!/bin/bash
file=$1
v=0
if [ $# -ne 1 ]
then
echo "$0 fileName"
exit 1
fi
if [ ! -f $file ]
then
echo "$file not a file"
exit 2
fi
while read -n 1 c
do
l=$(echo $c | tr [:upper:] [:lower:])
[[ "$l" == "a" || "$l" == "e" || "$l" == "i" || "$l" == "o" || "$l" == "u" ]] && (( v++ ))
done < $file
echo "Vowels : $v"
echo "Characters : $(cat $file | wc -c)"
echo "Blank lines : $(grep -c '^$' $file)"
echo "Lines : $(cat $file|wc -l )"

#sh vowelInFile.sh lastmodify.sh
Vowels : 102
Characters : 337
Blank lines : 1
Lines : 13
-----------------------------------------------------------------
#Write a shell script in LINUX / UNIX that accepts a text file as input and prints
each sentence in the text file in reverse order to the standard output:

if [ $# -eq 1 ]
    then
        if [ -f $1 ]
            then
            a=`rev $1`
            echo "Reverse of $1"
                cat $1
            echo " is-> $a"
            else
            echo "File does not exist"
         fi
    else
        echo "Please enter file name or path"
    fi
--------------------------------------------------------------------------


